version: '3.8'

services:
  logo-detection-api-dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: logo-detection-api-dev
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - ENVIRONMENT=dev
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - HOST=0.0.0.0
      - PORT=8000
      - MODEL_PATH=models/yolov8n.pt
      - MAX_CONCURRENT_DOWNLOADS=10
      - MAX_CONCURRENT_DETECTIONS=4
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - logo-detection-network
    profiles:
      - dev

  logo-detection-api-prod:
    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    container_name: logo-detection-api-prod
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    environment:
      - ENVIRONMENT=prod
      - DEBUG=false
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8000
      - MODEL_PATH=models/yolov8n.pt
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - logo-detection-network
    profiles:
      - prod
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # Optional: Redis for caching (for future use)
  redis:
    image: redis:7-alpine
    container_name: logo-detection-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - logo-detection-network
    restart: unless-stopped
    profiles:
      - redis
      - prod-with-redis

  # Optional: Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: logo-detection-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - logo-detection-api-prod
    networks:
      - logo-detection-network
    restart: unless-stopped
    profiles:
      - nginx
      - prod-with-nginx

networks:
  logo-detection-network:
    driver: bridge

volumes:
  redis_data: